
package model;

import java.util.List;
import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "NewWebService", targetNamespace = "http://service/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface NewWebService {


    /**
     * 
     * @param product
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "remove", targetNamespace = "http://service/", className = "model.Remove")
    @Action(input = "http://service/NewWebService/remove")
    public void remove(
        @WebParam(name = "product", targetNamespace = "")
        Product product);

    /**
     * 
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "count", targetNamespace = "http://service/", className = "model.Count")
    @ResponseWrapper(localName = "countResponse", targetNamespace = "http://service/", className = "model.CountResponse")
    @Action(input = "http://service/NewWebService/countRequest", output = "http://service/NewWebService/countResponse")
    public int count();

    /**
     * 
     * @param id
     * @return
     *     returns model.Product
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "find", targetNamespace = "http://service/", className = "model.Find")
    @ResponseWrapper(localName = "findResponse", targetNamespace = "http://service/", className = "model.FindResponse")
    @Action(input = "http://service/NewWebService/findRequest", output = "http://service/NewWebService/findResponse")
    public Product find(
        @WebParam(name = "id", targetNamespace = "")
        Object id);

    /**
     * 
     * @param product
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "create", targetNamespace = "http://service/", className = "model.Create")
    @Action(input = "http://service/NewWebService/create")
    public void create(
        @WebParam(name = "product", targetNamespace = "")
        Product product);

    /**
     * 
     * @param quantity
     * @param productId
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sellProduct", targetNamespace = "http://service/", className = "model.SellProduct")
    @ResponseWrapper(localName = "sellProductResponse", targetNamespace = "http://service/", className = "model.SellProductResponse")
    @Action(input = "http://service/NewWebService/sellProductRequest", output = "http://service/NewWebService/sellProductResponse")
    public String sellProduct(
        @WebParam(name = "productId", targetNamespace = "")
        int productId,
        @WebParam(name = "quantity", targetNamespace = "")
        int quantity);

    /**
     * 
     * @return
     *     returns java.util.List<model.Product>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findAll", targetNamespace = "http://service/", className = "model.FindAll")
    @ResponseWrapper(localName = "findAllResponse", targetNamespace = "http://service/", className = "model.FindAllResponse")
    @Action(input = "http://service/NewWebService/findAllRequest", output = "http://service/NewWebService/findAllResponse")
    public List<Product> findAll();

    /**
     * 
     * @param product
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "edit", targetNamespace = "http://service/", className = "model.Edit")
    @Action(input = "http://service/NewWebService/edit")
    public void edit(
        @WebParam(name = "product", targetNamespace = "")
        Product product);

    /**
     * 
     * @param range
     * @return
     *     returns java.util.List<model.Product>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findRange", targetNamespace = "http://service/", className = "model.FindRange")
    @ResponseWrapper(localName = "findRangeResponse", targetNamespace = "http://service/", className = "model.FindRangeResponse")
    @Action(input = "http://service/NewWebService/findRangeRequest", output = "http://service/NewWebService/findRangeResponse")
    public List<Product> findRange(
        @WebParam(name = "range", targetNamespace = "")
        List<Integer> range);

}
